{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww13660\viewh11420\viewkind0
\deftab720
\pard\pardeftab720\sl360

\f0\fs32 \cf0 BREVE INTRODUZIONE A GIT\
				
\f1\fs24 \

\f0\fs32 Le operazioni di sincronizzazione supportate da Git vanno eseguite tassativamente prima e dopo la sessione di lavoro.\
\

\fs24 PREREQUISITI: git installato sul pc e un account su github/sourceforge o il sito con repository scelto
\f1 \
Da github, nella pagina della repository dare il comando \'93clone repository\'94 per ottenere una copia locale dei file\
\

\b\fs36 \
\

\f0\b0\fs32 Vanno successivamente eseguite le seguenti operazioni:
\f1\fs24 \
\pard\pardeftab720
\cf0 \
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360
\ls1\ilvl0
\f0\fs32 \cf0 {\listtext	1.	}
\b git pull
\b0 : prima di iniziare una nuova sessione di lavoro per ottenere le modifiche apportate dagli altri membri	\
{\listtext	2.	}inizio sessione di lavoro locale\
{\listtext	3.	}fine la sessione\
{\listtext	4.	}
\b git status:
\b0  permette di vedere lo stato locale dei file rispetto a quelli remoti, in particolare:\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl360
\ls1\ilvl1\cf0 {\listtext	
\f2 \uc0\u8259 
\f0 	}compariranno in rosso i documenti non ancora sincronizzati da locale a remoto\
{\listtext	
\f2 \uc0\u8259 
\f0 	}usare il comando 
\b git add nomefile 
\b0 per aggiungere i file modificati all\'92insieme dei file da committare\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl360
\ls1\ilvl0\cf0 {\listtext	5.	}
\b git commit -m \'91messaggio\'92
\b0 : al termine di una sessione di lavoro per confermare le modifiche apportate. L\'92operazione di commit prevede l\'92inserimento di un messaggio il quale deve descrivere il lavoro svolto\
\ls1\ilvl0
\f1\b\fs36         
\fs28 NB:
\fs26 una volta effettuate le modifiche ad un documento,dare a \'91messaggio\'92 un nome sensato(che descriva la modifiche apportate)
\f0\b0\fs32 \
{\listtext	7.	}
\b git push
\b0 : dopo l\'92operazione di commit per caricare i file modificati nel repository remoto \
{\listtext	8.	}
\b git merge
\b0 : se durante la sessione di lavoro un altro membro ha modificato dei file per sommare le modifiche e poterle caricare nel repository		\
{\listtext	9.	}\
\pard\pardeftab720\sl360
\cf0 					 				
\f1\fs24 \
}